{"file":"/Users/darraghoriordan/Documents/personal-projects/ssh-tool-new-electron/src/electron/gitConfigurations/services/GitConfigFileCacheService.test.ts","mappings":";;;;;;;;;;;AAAA,2EAAuE;AAEvE,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,EAAE,CAAC,yBAAyB,EAAE,GAAS,EAAE;QACvC,MAAM,MAAM,GAAG,qDAAyB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAA;QAClE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAA;QACtE,sBAAsB;QACtB,6DAA6D;QAC7D,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAA;QAClC,0DAA0D;QAC1D,8CAA8C;IAChD,CAAC,CAAA,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["/Users/darraghoriordan/Documents/personal-projects/ssh-tool-new-electron/src/electron/gitConfigurations/services/GitConfigFileCacheService.test.ts"],"sourcesContent":["import { GitConfigFileCacheService } from './GitConfigFileCacheService'\n\ndescribe('GitConfigFileCacheService', () => {\n  it('is an expected response', async () => {\n    const result = GitConfigFileCacheService.transformToInstance('{}')\n    expect(result.constructor.name).toEqual('GitConfigFileListCacheModel')\n    // This test is broken\n    // need to add a correct test string to the method call above\n    expect(result).not.toBeUndefined()\n    // then need to change assertion to check for parsed items\n    // expect(result.configList.length).toEqual(2)\n  })\n})\n"],"version":3}