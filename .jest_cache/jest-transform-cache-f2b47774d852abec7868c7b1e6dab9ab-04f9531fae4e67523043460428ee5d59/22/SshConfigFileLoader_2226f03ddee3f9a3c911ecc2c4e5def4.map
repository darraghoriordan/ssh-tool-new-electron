{"file":"/Users/darraghoriordan/Documents/personal-projects/ssh-tool-new-electron/src/electron/services/sshConfigFile/SshConfigFileLoader.ts","mappings":";;;;;;AAAA,wFAA+D;AAC/D,+DAA0E;AAC1E,gDAAuB;AACvB,uCAA8B;AAE9B,MAAa,mBAAmB;IAC9B,MAAM,CAAC,IAAI;QACT,4CAA4C;QAC5C,MAAM,WAAW,GAAG,cAAI,CAAC,IAAI,CAAC,cAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;QAEpE,MAAM,eAAe,GAAG,iCAAuB,CAAC,YAAY,CAAC,WAAW,CAAC,CAAA;QAEzE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAA;SACtD;QAED,oEAAoE;QACpE,OAAO,yCAAmB,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAS,CAAC,CAAA;IAC1E,CAAC;CACF;AAdD,kDAcC","names":[],"sources":["/Users/darraghoriordan/Documents/personal-projects/ssh-tool-new-electron/src/electron/services/sshConfigFile/SshConfigFileLoader.ts"],"sourcesContent":["import SshConfigFileDiskLoader from './SshConfigFileDiskLoader'\nimport { AvailableHost, SshConfigFileParser } from './SshConfigFileParser'\nimport path from 'path'\nimport { app } from 'electron'\n\nexport class SshConfigFileLoader {\n  static load(): AvailableHost[] {\n    // TODO: get the ssh file path from settings\n    const sshFilePath = path.join(app.getPath('home'), '.ssh', 'config')\n\n    const rawFileContents = SshConfigFileDiskLoader.loadFromPath(sshFilePath)\n\n    if (!rawFileContents.found) {\n      throw new Error(\"Couldn't parse the ssh config file\")\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return SshConfigFileParser.parseValidSshHosts(rawFileContents.contents!)\n  }\n}\n"],"version":3}