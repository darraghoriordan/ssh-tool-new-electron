{"file":"/Users/darraghoriordan/Documents/personal-projects/ssh-tool-new-electron/src/electron/services/PromisifiedNodeUtilities/SpawnPromise.ts","mappings":";;;AAAA,iDAAqC;AAE9B,MAAM,YAAY,GAAG,CAC1B,GAAW,EACX,IAAc,EACd,GAAW,EACX,KAAe,EACE,EAAE;IACnB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI;YACF,MAAM,UAAU,GAAG,IAAA,qBAAK,EAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAA;YACnD,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAC9D,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;gBAC3B,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YAC9B,CAAC,CAAC,CAAA;SACH;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,CAAC,CAAC,CAAC,CAAA;SACV;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AAjBY,QAAA,YAAY,gBAiBxB","names":[],"sources":["/Users/darraghoriordan/Documents/personal-projects/ssh-tool-new-electron/src/electron/services/PromisifiedNodeUtilities/SpawnPromise.ts"],"sourcesContent":["import { spawn } from 'child_process'\n\nexport const spawnPromise = (\n  cmd: string,\n  args: string[],\n  cwd: string,\n  shell?: boolean\n): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    try {\n      const runCommand = spawn(cmd, args, { cwd, shell })\n      runCommand.stdout.on('data', data => resolve(data.toString()))\n      runCommand.on('error', err => {\n        throw new Error(err.message)\n      })\n    } catch (e) {\n      reject(e)\n    }\n  })\n}\n"],"version":3}