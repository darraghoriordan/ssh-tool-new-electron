39744919b8191c891e8055e395250a19
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const TestData_1 = require("../../appSettings/models/TestData");
const GitConfigFileCacheService_1 = require("./GitConfigFileCacheService");
describe('GitConfigFileCacheService', () => {
    it('is an expected response', () => __awaiter(void 0, void 0, void 0, function* () {
        const result = yield GitConfigFileCacheService_1.GitConfigFileCacheService.transformToInstance(TestData_1.rawGitConfig);
        expect(result.constructor.name).toEqual('GitConfigFileListCacheModel');
        expect(result.configList.length).toEqual(2);
    }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2RhcnJhZ2hvcmlvcmRhbi9Eb2N1bWVudHMvcGVyc29uYWwtcHJvamVjdHMvc3NoLXRvb2wtbmV3LWVsZWN0cm9uL3NyYy9lbGVjdHJvbi9naXRDb25maWd1cmF0aW9ucy9zZXJ2aWNlcy9HaXRDb25maWdGaWxlQ2FjaGVTZXJ2aWNlLnRlc3QudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxnRUFBZ0U7QUFDaEUsMkVBQXVFO0FBRXZFLFFBQVEsQ0FBQywyQkFBMkIsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLHlCQUF5QixFQUFFLEdBQVMsRUFBRTtRQUN2QyxNQUFNLE1BQU0sR0FBRyxNQUFNLHFEQUF5QixDQUFDLG1CQUFtQixDQUNoRSx1QkFBWSxDQUNiLENBQUE7UUFDRCxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsNkJBQTZCLENBQUMsQ0FBQTtRQUN0RSxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDN0MsQ0FBQyxDQUFBLENBQUMsQ0FBQTtBQUNKLENBQUMsQ0FBQyxDQUFBIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXJyYWdob3Jpb3JkYW4vRG9jdW1lbnRzL3BlcnNvbmFsLXByb2plY3RzL3NzaC10b29sLW5ldy1lbGVjdHJvbi9zcmMvZWxlY3Ryb24vZ2l0Q29uZmlndXJhdGlvbnMvc2VydmljZXMvR2l0Q29uZmlnRmlsZUNhY2hlU2VydmljZS50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJhd0dpdENvbmZpZyB9IGZyb20gJy4uLy4uL2FwcFNldHRpbmdzL21vZGVscy9UZXN0RGF0YSdcbmltcG9ydCB7IEdpdENvbmZpZ0ZpbGVDYWNoZVNlcnZpY2UgfSBmcm9tICcuL0dpdENvbmZpZ0ZpbGVDYWNoZVNlcnZpY2UnXG5cbmRlc2NyaWJlKCdHaXRDb25maWdGaWxlQ2FjaGVTZXJ2aWNlJywgKCkgPT4ge1xuICBpdCgnaXMgYW4gZXhwZWN0ZWQgcmVzcG9uc2UnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgR2l0Q29uZmlnRmlsZUNhY2hlU2VydmljZS50cmFuc2Zvcm1Ub0luc3RhbmNlKFxuICAgICAgcmF3R2l0Q29uZmlnXG4gICAgKVxuICAgIGV4cGVjdChyZXN1bHQuY29uc3RydWN0b3IubmFtZSkudG9FcXVhbCgnR2l0Q29uZmlnRmlsZUxpc3RDYWNoZU1vZGVsJylcbiAgICBleHBlY3QocmVzdWx0LmNvbmZpZ0xpc3QubGVuZ3RoKS50b0VxdWFsKDIpXG4gIH0pXG59KVxuIl0sInZlcnNpb24iOjN9