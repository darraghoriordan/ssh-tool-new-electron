name: CreateBuilds
on: workflow_dispatch

env:
  # Easy way to set the node version
  NODE_VERSION: '16'

jobs:
  build_win:
    name: Windows build
    runs-on: windows-latest
    steps:
      - name: Clone repository (master branch)
        uses: actions/checkout@v3
        with:
          ref: 'master'
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set up build environment
        run: yarn install --frozen-lockfile

      - name: Package Windows (x64)
        run: yarn package:win-x64
        #env:
        # CSC_LINK: ${{ secrets.WIN_CERT_2025_03_15 }}
        # CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PASS_2025_03_15 }}
      - name: Package Windows (arm64)
        run: yarn package:win-arm
        # env:
        # CSC_LINK: ${{ secrets.WIN_CERT_2025_03_15 }}
        # CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PASS_2025_03_15 }}
      - name: Build NSIS installer (x64)
        run: yarn release:win-x64
        # env:
        # CSC_LINK: ${{ secrets.WIN_CERT_2025_03_15 }}
        # CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PASS_2025_03_15 }}
      - name: Build NSIS installer (arm64)
        run: yarn release:win-arm
        # env:
        # CSC_LINK: ${{ secrets.WIN_CERT_2025_03_15 }}
        # CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PASS_2025_03_15 }}

      # Now we need to cache all artifacts. We create one artifact per build
      # step. It should be noted that "artifacts" are more like file shares.
      # Thus they can contain multiple files.
      - name: Cache installers
        uses: actions/upload-artifact@v2
        with:
          name: win32
          path: |
            ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-x64.exe
            ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-arm64.exe
  prepare_release:
    name: Prepare release draft
    # Make sure (and wait until) the builds have succeeded
    #needs: [build_win, build_macos, build_linux]
    needs: [build_win]
    runs-on: ubuntu-latest
    steps:
      # NOTE: Here we do not care about which branch is checked out since we
      # just need the two scripts which are present in both.
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set up build environment
        run: yarn install --frozen-lockfile
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Make release directory
        run: mkdir ./release
      # First, download all resulting assets from the previous steps.
      - name: Retrieve windows installers
        uses: actions/download-artifact@v2
        with:
          name: win32
          path: ./release
      # - name: Retrieve macOS images
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: darwin
      #     path: ./release
      # - name: Retrieve Linux installers
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: linux
      #     path: ./release
      - uses: shallwefootball/s3-upload-action@master
        name: Upload to Store
        id: DOUpload
        with:
          aws_key_id: ${{ secrets.SPACE_KEY }}
          aws_secret_access_key: ${{ secrets.SPACE_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.SPACE_NAME }}
          source_dir: 'release'
          destination_dir: 'localDevTools/gr-hosting/${{steps.extract_version.outputs.version}}'
      # OTHERWISE: Create a new release draft
      # - name: Create release draft
      #   uses: softprops/action-gh-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # Populate the inputs of the release we already know
      #     tag_name: v${{steps.extract_version.outputs.version}}-installers
      #     name: Release v${{steps.extract_version.outputs.version}}
      #     body: If you can read this, we have forgotten to fill in the changelog. Sorry!
      #     draft: true # Always create as draft, so that we can populate the remaining values easily
      #     # Gosh, is that convenient as opposed to earlier!
      #     files: |
      #       ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-x64.exe
      #       ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-arm64.exe
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-x64.dmg
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-arm64.dmg
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-amd64.deb
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-x86_64.rpm
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-x86_64.AppImage
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-arm64.deb
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-aarch64.rpm
      # ./release/LocalDevTools-${{steps.extract_version.outputs.version}}-arm64.AppImage
